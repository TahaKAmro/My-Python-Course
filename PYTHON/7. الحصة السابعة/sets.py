myset = {1,1,1,2,2,2,3,3,3} # طريقة تعريف المجموعات بشكل عام

print(myset) 

myset2 = {12 , 35.23, 'ddff' , True } # هنا تظهر لدينا عشوائية المجموعات

print(myset2)

#-------------------------
print('-' * 50)

a = {4,35.24 , 'july', True}
a.clear()
print(a)
# هذه التقنية موجودة معنا في القوائم و يمكن استعمالها هنا حيث تقوم بإفراغ المجموعة من كل العناصر التي فيها
#-------------------------
print('-' * 50)

b = {1,2,3}
c = {'one' , 'two', 'three'}
print(c.union(b))
print(c|b)
# تقوم التقنية بتوحيد مجموعتين عن طريق خلق مجموعة ثانية تكون عبارة عن مدموج المجموعتين
#------------------
print('-' * 50)

d = {1,2,3}
d.add(4)
print(d)
# تقوم التقنية بإضافة عنصر معين إلى المجموعة في موقع عشوائي
#------------------
print('-' * 50)

f = {65 , 53.24 , 'fpkdsd' , False}
g = f.copy()

print(f)
print(g)
f.add('sdgn')
print(f)
print(g)
# اخذنا هذه التقنية من القوائم جيث تقوم التقنية بنسخ المجموعة
#---------------------------
print('-' * 50)

e = {13,34.32 , '1qafd'}
e.discard(3)
e2 = {13,34.32 , '1qafd'}
e2.remove(13)
print(e)
print(e2)
# تقوم التقنيتان بإزالة عنصر معين، إلا أن التقنية الأولى لا تعيد خطأً إذا بم تجد العنصر على عكس الثانية
#---------------------------
print('-' * 50)

h = {132 ,45.23 , 'WQFRG', 'aszgr'}

print(h.pop())
# تقوم بطباعة عنصر عشوائي من المجموعة
#--------------------------
print('-' * 50)

myset = {1,2,3}
mylist = ['one' , 'two' , 'three']
myset.update(mylist)

print(myset)
# تقوم بتحديث المجموعة من خلال إضافة مجموعة او قائمة جديدة إليها
#--------------------
print('-' *50)

u = {1,2,3,4}
y = {7,2,3}

print(u.difference(y))
print(y - u)
# تقوم التقنية بطباعة العناصر الموجودة في المجموعة التي طبقت عليها العملية و التي هي غير موجودة في المجموعة الثانية المعطاة بين الأقواس
#---------------------
print('-' * 50)

y.difference_update(u)
print(y)
# تقوم التقنية بتحديث قيمة المجموعة التي طبقت عليها التقنية إلى العناصر الالمختلفة بين المجموعتين
#---------------------
print('-' * 50)

myset1 = {1 ,2 , 3 , 4}
myset2 = {1 ,2 , 3.3 , 4.4 , 5}
print(myset1.intersection(myset2))
myset1.intersection_update(myset2)
print(myset1)
# تقوم التقنية الأولى بطباعة العناصر المتقاطعة ( المشتركة ) بين المجموعتين
# تقوم التقنية الثانية بتحديث قيمة المجموعة التي طبقت عليها العملية إلى العانصر المشتركة بين المجموعتين
#---------------------
print('-'*50)

j = {1,2,3,4}
k = {1,2,4}

print(j.issuperset(k))
# تقوم التقنية بإعادة قيمة منطقية تعبر عن إجابة لسؤال: هل المجموعة الأولى تعتبر مجموعة كبرى من المجموعة الثانية ؟؟

print(k.issubset(j))
# تقوم التقنية بإعادة قيمة منطقية تعبر عن إجابة لسؤال: هل المجموعة الأولى تعتبر مجموعة جزئية من المجموعة الثانية ؟؟

o = {4 , '2' , '3'}
i = {1 ,5 ,6}

print(i.isdisjoint(o))
# تقوم التقنية بإعادة قيمة منطقية تعبر عن إجابة لسؤال: هل المجموعتان مختلفتان تماماً أي هل لا يوجد أي عناصر مشتركة بينهما ؟؟